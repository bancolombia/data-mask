allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'
    apply plugin: 'org.owasp.dependencycheck'
    
    sourceCompatibility = JavaVersion.VERSION_17

    repositories {
        mavenCentral()
    }

    group 'com.github.bancolombia'

    sonarqube {
        properties {
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.projectKey", "bancolombia_data-mask"
            property "sonar.organization", "grupo-bancolombia"
            property "sonar.host.url", "https://sonarcloud.io/"
            property "sonar.sources", "src/main"
            property "sonar.test", "src/test"
            property "sonar.java.binaries", "build/classes"
            property "sonar.junit.reportPaths", "build/test-results/test"
            property "sonar.java-coveragePlugin", "jacoco"
            property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/generateMergedReport/generateMergedReport.xml"
            property "sonar.exclusions", ".github/**"
            property 'sonar.coverage.exclusions', 'sample/**/*'
        }
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

subprojects {
    apply plugin: "java-library"
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'org.owasp.dependencycheck'

    ext {
        groupId = 'com.github.bancolombia'
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.34'
        annotationProcessor 'org.projectlombok:lombok:1.18.34'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
        testCompileOnly 'org.projectlombok:lombok:1.18.34'
        testImplementation 'io.projectreactor:reactor-test:3.6.9'
        testImplementation 'org.junit.jupiter:junit-jupiter:5.11.0'
        testImplementation 'org.mockito:mockito-inline:5.2.0'
        testImplementation 'org.mockito:mockito-junit-jupiter:5.13.0'
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    test.finalizedBy(project.tasks.jacocoTestReport)

    jacocoTestReport {
        dependsOn test
        reports {
            xml.setRequired true
            xml.setOutputLocation layout.buildDirectory.file("reports/jacoco.xml")
            csv.setRequired false
            html.setOutputLocation layout.buildDirectory.dir("reports/jacocoHtml")
        }
    }

    compileJava {
        options.compilerArgs = [
                '-Amapstruct.suppressGeneratorTimestamp=true',
                '-Amapstruct.suppressGeneratorVersionInfoComment=true'
        ]
    }

//    check.dependsOn dependencyCheckAggregate

    dependencyCheck {
        format = 'JSON'
        formats = ['JSON']
    }

    if (toPublish.split(',').contains(it.name)) {
        apply plugin: "maven-publish"
        apply plugin: "signing"

        java {
            withJavadocJar()
            withSourcesJar()
        }

        javadoc {
            if (JavaVersion.current().isJava9Compatible()) {
                options.addBooleanOption('html5', true)
            }
        }
        javadoc.failOnError = false

        tasks.withType(GenerateModuleMetadata).configureEach {
            enabled = false
        }

        publishing {
            publications {
                mavenJava(MavenPublication) {

                    pom {
                        name = 'data-mask'
                        description = 'Data Masking library for jackson-databind.'
                        url = 'https://github.com/bancolombia/data-mask'
                        licenses {
                            license {
                                name = "MIT License"
                                url = "https://opensource.org/licenses/mit-license.php"
                                distribution = "repo"
                            }
                        }
                        developers {
                            developer {
                                id = "gabheadz"
                                name = "Gabriel Martinez"
                                email = "gabrieljm@gmail.com"
                            }
                        }
                        scm {
                            url ="git@github.com:bancolombia/data-mask.git"
                        }
                    }

                    from components.java

                    groupId = groupId
                    artifactId = artifactId
                    version = project.property('version')
                }
            }
        }

        if (project.hasProperty('signing.keyId')) {
            signing {
                sign publishing.publications.mavenJava
            }
        }
    }

}

tasks.register('generateMergedReport', JacocoReport) {
    dependsOn test
    dependsOn subprojects.test
    dependsOn subprojects.javadoc
    dependsOn subprojects.jacocoTestReport
    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
    reports {
        xml.setRequired true
        csv.setRequired false
        html.setRequired true
    }
}

tasks.named('wrapper') {
    gradleVersion = '8.5'
}